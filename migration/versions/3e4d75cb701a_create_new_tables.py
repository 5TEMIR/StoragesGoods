"""create new tables

Revision ID: 3e4d75cb701a
Revises: 1cc4e852d6d8
Create Date: 2024-12-03 20:36:12.454174

"""
from alembic import op
import sqlalchemy as sa

from project.core.config import settings


# revision identifiers, used by Alembic.
revision = '3e4d75cb701a'
down_revision = '1cc4e852d6d8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.Column('address', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='schema_storagesgoods'
    )
    op.create_table('goodsgroups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.Column('description', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='schema_storagesgoods'
    )
    op.create_table('producers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.Column('address', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='schema_storagesgoods'
    )
    op.create_table('storagemethods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.Column('description', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='schema_storagesgoods'
    )
    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.Column('address', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='schema_storagesgoods'
    )
    op.create_table('expenses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('expens_date', sa.DateTime(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['schema_storagesgoods.clients.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='schema_storagesgoods'
    )
    op.create_table('goods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=False),
    sa.Column('description', sa.String().with_variant(sa.String(length=255), 'postgresql'), nullable=True),
    sa.Column('goods_group_id', sa.Integer(), nullable=False),
    sa.Column('producer_id', sa.Integer(), nullable=False),
    sa.Column('totalquantity', sa.Integer(), nullable=False),
    sa.Column('storage_method_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['goods_group_id'], ['schema_storagesgoods.goodsgroups.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['producer_id'], ['schema_storagesgoods.producers.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['storage_method_id'], ['schema_storagesgoods.storagemethods.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='schema_storagesgoods'
    )
    op.create_table('receipts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('receip_date', sa.DateTime(), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['supplier_id'], ['schema_storagesgoods.suppliers.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='schema_storagesgoods'
    )
    op.create_table('goodstransfers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transfer_date', sa.DateTime(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('from_storage_id', sa.Integer(), nullable=False),
    sa.Column('to_storage_id', sa.Integer(), nullable=False),
    sa.Column('good_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['from_storage_id'], ['schema_storagesgoods.storages.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['good_id'], ['schema_storagesgoods.goods.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_storage_id'], ['schema_storagesgoods.storages.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='schema_storagesgoods'
    )
    op.create_table('storageplaces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('good_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('storage_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['good_id'], ['schema_storagesgoods.goods.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['storage_id'], ['schema_storagesgoods.storages.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='schema_storagesgoods'
    )
    op.create_table('goodsexpenses',
    sa.Column('expense_id', sa.Integer(), nullable=False),
    sa.Column('storage_place_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['expense_id'], ['schema_storagesgoods.expenses.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['storage_place_id'], ['schema_storagesgoods.storageplaces.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('expense_id', 'storage_place_id'),
    schema='schema_storagesgoods'
    )
    op.create_table('goodsreceipts',
    sa.Column('receipt_id', sa.Integer(), nullable=False),
    sa.Column('storage_place_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['receipt_id'], ['schema_storagesgoods.receipts.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['storage_place_id'], ['schema_storagesgoods.storageplaces.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('receipt_id', 'storage_place_id'),
    schema='schema_storagesgoods'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('goodsreceipts', schema='schema_storagesgoods')
    op.drop_table('goodsexpenses', schema='schema_storagesgoods')
    op.drop_table('storageplaces', schema='schema_storagesgoods')
    op.drop_table('goodstransfers', schema='schema_storagesgoods')
    op.drop_table('receipts', schema='schema_storagesgoods')
    op.drop_table('goods', schema='schema_storagesgoods')
    op.drop_table('expenses', schema='schema_storagesgoods')
    op.drop_table('suppliers', schema='schema_storagesgoods')
    op.drop_table('storagemethods', schema='schema_storagesgoods')
    op.drop_table('producers', schema='schema_storagesgoods')
    op.drop_table('goodsgroups', schema='schema_storagesgoods')
    op.drop_table('clients', schema='schema_storagesgoods')
    # ### end Alembic commands ###